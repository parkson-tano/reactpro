{"ast":null,"code":"/*!\n  * Bootstrap collapse.js v4.5.2 (https://getbootstrap.com/)\n  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('jquery'), require('./util.js')) : typeof define === 'function' && define.amd ? define(['jquery', './util.js'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Collapse = factory(global.jQuery, global.Util));\n})(this, function ($, Util) {\n  'use strict';\n\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\n  Util = Util && Object.prototype.hasOwnProperty.call(Util, 'default') ? Util['default'] : Util;\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n\n  var NAME = 'collapse';\n  var VERSION = '4.5.2';\n  var DATA_KEY = 'bs.collapse';\n  var EVENT_KEY = \".\" + DATA_KEY;\n  var DATA_API_KEY = '.data-api';\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\n  var Default = {\n    toggle: true,\n    parent: ''\n  };\n  var DefaultType = {\n    toggle: 'boolean',\n    parent: '(string|element)'\n  };\n  var EVENT_SHOW = \"show\" + EVENT_KEY;\n  var EVENT_SHOWN = \"shown\" + EVENT_KEY;\n  var EVENT_HIDE = \"hide\" + EVENT_KEY;\n  var EVENT_HIDDEN = \"hidden\" + EVENT_KEY;\n  var EVENT_CLICK_DATA_API = \"click\" + EVENT_KEY + DATA_API_KEY;\n  var CLASS_NAME_SHOW = 'show';\n  var CLASS_NAME_COLLAPSE = 'collapse';\n  var CLASS_NAME_COLLAPSING = 'collapsing';\n  var CLASS_NAME_COLLAPSED = 'collapsed';\n  var DIMENSION_WIDTH = 'width';\n  var DIMENSION_HEIGHT = 'height';\n  var SELECTOR_ACTIVES = '.show, .collapsing';\n  var SELECTOR_DATA_TOGGLE = '[data-toggle=\"collapse\"]';\n  /**\n   * ------------------------------------------------------------------------\n   * Class Definition\n   * ------------------------------------------------------------------------\n   */\n\n  var Collapse = /*#__PURE__*/function () {\n    function Collapse(element, config) {\n      this._isTransitioning = false;\n      this._element = element;\n      this._config = this._getConfig(config);\n      this._triggerArray = [].slice.call(document.querySelectorAll(\"[data-toggle=\\\"collapse\\\"][href=\\\"#\" + element.id + \"\\\"],\" + (\"[data-toggle=\\\"collapse\\\"][data-target=\\\"#\" + element.id + \"\\\"]\")));\n      var toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));\n\n      for (var i = 0, len = toggleList.length; i < len; i++) {\n        var elem = toggleList[i];\n        var selector = Util.getSelectorFromElement(elem);\n        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {\n          return foundElem === element;\n        });\n\n        if (selector !== null && filterElement.length > 0) {\n          this._selector = selector;\n\n          this._triggerArray.push(elem);\n        }\n      }\n\n      this._parent = this._config.parent ? this._getParent() : null;\n\n      if (!this._config.parent) {\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\n      }\n\n      if (this._config.toggle) {\n        this.toggle();\n      }\n    } // Getters\n\n\n    var _proto = Collapse.prototype; // Public\n\n    _proto.toggle = function toggle() {\n      if ($(this._element).hasClass(CLASS_NAME_SHOW)) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    };\n\n    _proto.show = function show() {\n      var _this = this;\n\n      if (this._isTransitioning || $(this._element).hasClass(CLASS_NAME_SHOW)) {\n        return;\n      }\n\n      var actives;\n      var activesData;\n\n      if (this._parent) {\n        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {\n          if (typeof _this._config.parent === 'string') {\n            return elem.getAttribute('data-parent') === _this._config.parent;\n          }\n\n          return elem.classList.contains(CLASS_NAME_COLLAPSE);\n        });\n\n        if (actives.length === 0) {\n          actives = null;\n        }\n      }\n\n      if (actives) {\n        activesData = $(actives).not(this._selector).data(DATA_KEY);\n\n        if (activesData && activesData._isTransitioning) {\n          return;\n        }\n      }\n\n      var startEvent = $.Event(EVENT_SHOW);\n      $(this._element).trigger(startEvent);\n\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      if (actives) {\n        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');\n\n        if (!activesData) {\n          $(actives).data(DATA_KEY, null);\n        }\n      }\n\n      var dimension = this._getDimension();\n\n      $(this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);\n      this._element.style[dimension] = 0;\n\n      if (this._triggerArray.length) {\n        $(this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);\n      }\n\n      this.setTransitioning(true);\n\n      var complete = function complete() {\n        $(_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE + \" \" + CLASS_NAME_SHOW);\n        _this._element.style[dimension] = '';\n\n        _this.setTransitioning(false);\n\n        $(_this._element).trigger(EVENT_SHOWN);\n      };\n\n      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n      var scrollSize = \"scroll\" + capitalizedDimension;\n      var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n      this._element.style[dimension] = this._element[scrollSize] + \"px\";\n    };\n\n    _proto.hide = function hide() {\n      var _this2 = this;\n\n      if (this._isTransitioning || !$(this._element).hasClass(CLASS_NAME_SHOW)) {\n        return;\n      }\n\n      var startEvent = $.Event(EVENT_HIDE);\n      $(this._element).trigger(startEvent);\n\n      if (startEvent.isDefaultPrevented()) {\n        return;\n      }\n\n      var dimension = this._getDimension();\n\n      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + \"px\";\n      Util.reflow(this._element);\n      $(this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE + \" \" + CLASS_NAME_SHOW);\n      var triggerArrayLength = this._triggerArray.length;\n\n      if (triggerArrayLength > 0) {\n        for (var i = 0; i < triggerArrayLength; i++) {\n          var trigger = this._triggerArray[i];\n          var selector = Util.getSelectorFromElement(trigger);\n\n          if (selector !== null) {\n            var $elem = $([].slice.call(document.querySelectorAll(selector)));\n\n            if (!$elem.hasClass(CLASS_NAME_SHOW)) {\n              $(trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);\n            }\n          }\n        }\n      }\n\n      this.setTransitioning(true);\n\n      var complete = function complete() {\n        _this2.setTransitioning(false);\n\n        $(_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);\n      };\n\n      this._element.style[dimension] = '';\n      var transitionDuration = Util.getTransitionDurationFromElement(this._element);\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\n    };\n\n    _proto.setTransitioning = function setTransitioning(isTransitioning) {\n      this._isTransitioning = isTransitioning;\n    };\n\n    _proto.dispose = function dispose() {\n      $.removeData(this._element, DATA_KEY);\n      this._config = null;\n      this._parent = null;\n      this._element = null;\n      this._triggerArray = null;\n      this._isTransitioning = null;\n    } // Private\n    ;\n\n    _proto._getConfig = function _getConfig(config) {\n      config = _extends({}, Default, config);\n      config.toggle = Boolean(config.toggle); // Coerce string values\n\n      Util.typeCheckConfig(NAME, config, DefaultType);\n      return config;\n    };\n\n    _proto._getDimension = function _getDimension() {\n      var hasWidth = $(this._element).hasClass(DIMENSION_WIDTH);\n      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;\n    };\n\n    _proto._getParent = function _getParent() {\n      var _this3 = this;\n\n      var parent;\n\n      if (Util.isElement(this._config.parent)) {\n        parent = this._config.parent; // It's a jQuery object\n\n        if (typeof this._config.parent.jquery !== 'undefined') {\n          parent = this._config.parent[0];\n        }\n      } else {\n        parent = document.querySelector(this._config.parent);\n      }\n\n      var selector = \"[data-toggle=\\\"collapse\\\"][data-parent=\\\"\" + this._config.parent + \"\\\"]\";\n      var children = [].slice.call(parent.querySelectorAll(selector));\n      $(children).each(function (i, element) {\n        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\n      });\n      return parent;\n    };\n\n    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\n      var isOpen = $(element).hasClass(CLASS_NAME_SHOW);\n\n      if (triggerArray.length) {\n        $(triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\n      }\n    } // Static\n    ;\n\n    Collapse._getTargetFromElement = function _getTargetFromElement(element) {\n      var selector = Util.getSelectorFromElement(element);\n      return selector ? document.querySelector(selector) : null;\n    };\n\n    Collapse._jQueryInterface = function _jQueryInterface(config) {\n      return this.each(function () {\n        var $this = $(this);\n        var data = $this.data(DATA_KEY);\n\n        var _config = _extends({}, Default, $this.data(), typeof config === 'object' && config ? config : {});\n\n        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n          _config.toggle = false;\n        }\n\n        if (!data) {\n          data = new Collapse(this, _config);\n          $this.data(DATA_KEY, data);\n        }\n\n        if (typeof config === 'string') {\n          if (typeof data[config] === 'undefined') {\n            throw new TypeError(\"No method named \\\"\" + config + \"\\\"\");\n          }\n\n          data[config]();\n        }\n      });\n    };\n\n    _createClass(Collapse, null, [{\n      key: \"VERSION\",\n      get: function get() {\n        return VERSION;\n      }\n    }, {\n      key: \"Default\",\n      get: function get() {\n        return Default;\n      }\n    }]);\n\n    return Collapse;\n  }();\n  /**\n   * ------------------------------------------------------------------------\n   * Data Api implementation\n   * ------------------------------------------------------------------------\n   */\n\n\n  $(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n    if (event.currentTarget.tagName === 'A') {\n      event.preventDefault();\n    }\n\n    var $trigger = $(this);\n    var selector = Util.getSelectorFromElement(this);\n    var selectors = [].slice.call(document.querySelectorAll(selector));\n    $(selectors).each(function () {\n      var $target = $(this);\n      var data = $target.data(DATA_KEY);\n      var config = data ? 'toggle' : $trigger.data();\n\n      Collapse._jQueryInterface.call($target, config);\n    });\n  });\n  /**\n   * ------------------------------------------------------------------------\n   * jQuery\n   * ------------------------------------------------------------------------\n   */\n\n  $.fn[NAME] = Collapse._jQueryInterface;\n  $.fn[NAME].Constructor = Collapse;\n\n  $.fn[NAME].noConflict = function () {\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\n    return Collapse._jQueryInterface;\n  };\n\n  return Collapse;\n});","map":{"version":3,"sources":["../src/collapse.js"],"names":["NAME","VERSION","DATA_KEY","EVENT_KEY","DATA_API_KEY","JQUERY_NO_CONFLICT","$","Default","toggle","parent","DefaultType","EVENT_SHOW","EVENT_SHOWN","EVENT_HIDE","EVENT_HIDDEN","EVENT_CLICK_DATA_API","CLASS_NAME_SHOW","CLASS_NAME_COLLAPSE","CLASS_NAME_COLLAPSING","CLASS_NAME_COLLAPSED","DIMENSION_WIDTH","DIMENSION_HEIGHT","SELECTOR_ACTIVES","SELECTOR_DATA_TOGGLE","Collapse","document","element","toggleList","i","len","elem","selector","Util","filterElement","foundElem","show","actives","activesData","startEvent","dimension","complete","capitalizedDimension","scrollSize","transitionDuration","hide","triggerArrayLength","trigger","$elem","setTransitioning","dispose","_getConfig","config","Boolean","_getDimension","hasWidth","_getParent","children","_addAriaAndCollapsedClass","isOpen","triggerArray","_getTargetFromElement","_jQueryInterface","$this","data","_config","event","$trigger","selectors","$target"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.5.2): collapse.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME                = 'collapse'\nconst VERSION             = '4.5.2'\nconst DATA_KEY            = 'bs.collapse'\nconst EVENT_KEY           = `.${DATA_KEY}`\nconst DATA_API_KEY        = '.data-api'\nconst JQUERY_NO_CONFLICT  = $.fn[NAME]\n\nconst Default = {\n  toggle : true,\n  parent : ''\n}\n\nconst DefaultType = {\n  toggle : 'boolean',\n  parent : '(string|element)'\n}\n\nconst EVENT_SHOW           = `show${EVENT_KEY}`\nconst EVENT_SHOWN          = `shown${EVENT_KEY}`\nconst EVENT_HIDE           = `hide${EVENT_KEY}`\nconst EVENT_HIDDEN         = `hidden${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_SHOW       = 'show'\nconst CLASS_NAME_COLLAPSE   = 'collapse'\nconst CLASS_NAME_COLLAPSING = 'collapsing'\nconst CLASS_NAME_COLLAPSED  = 'collapsed'\n\nconst DIMENSION_WIDTH  = 'width'\nconst DIMENSION_HEIGHT = 'height'\n\nconst SELECTOR_ACTIVES     = '.show, .collapsing'\nconst SELECTOR_DATA_TOGGLE = '[data-toggle=\"collapse\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Collapse {\n  constructor(element, config) {\n    this._isTransitioning = false\n    this._element         = element\n    this._config          = this._getConfig(config)\n    this._triggerArray    = [].slice.call(document.querySelectorAll(\n      `[data-toggle=\"collapse\"][href=\"#${element.id}\"],` +\n      `[data-toggle=\"collapse\"][data-target=\"#${element.id}\"]`\n    ))\n\n    const toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE))\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i]\n      const selector = Util.getSelectorFromElement(elem)\n      const filterElement = [].slice.call(document.querySelectorAll(selector))\n        .filter((foundElem) => foundElem === element)\n\n      if (selector !== null && filterElement.length > 0) {\n        this._selector = selector\n        this._triggerArray.push(elem)\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null\n\n    if (!this._config.parent) {\n      this._addAriaAndCollapsedClass(this._element, this._triggerArray)\n    }\n\n    if (this._config.toggle) {\n      this.toggle()\n    }\n  }\n\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  // Public\n\n  toggle() {\n    if ($(this._element).hasClass(CLASS_NAME_SHOW)) {\n      this.hide()\n    } else {\n      this.show()\n    }\n  }\n\n  show() {\n    if (this._isTransitioning ||\n      $(this._element).hasClass(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    let actives\n    let activesData\n\n    if (this._parent) {\n      actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES))\n        .filter((elem) => {\n          if (typeof this._config.parent === 'string') {\n            return elem.getAttribute('data-parent') === this._config.parent\n          }\n\n          return elem.classList.contains(CLASS_NAME_COLLAPSE)\n        })\n\n      if (actives.length === 0) {\n        actives = null\n      }\n    }\n\n    if (actives) {\n      activesData = $(actives).not(this._selector).data(DATA_KEY)\n      if (activesData && activesData._isTransitioning) {\n        return\n      }\n    }\n\n    const startEvent = $.Event(EVENT_SHOW)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    if (actives) {\n      Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide')\n      if (!activesData) {\n        $(actives).data(DATA_KEY, null)\n      }\n    }\n\n    const dimension = this._getDimension()\n\n    $(this._element)\n      .removeClass(CLASS_NAME_COLLAPSE)\n      .addClass(CLASS_NAME_COLLAPSING)\n\n    this._element.style[dimension] = 0\n\n    if (this._triggerArray.length) {\n      $(this._triggerArray)\n        .removeClass(CLASS_NAME_COLLAPSED)\n        .attr('aria-expanded', true)\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      $(this._element)\n        .removeClass(CLASS_NAME_COLLAPSING)\n        .addClass(`${CLASS_NAME_COLLAPSE} ${CLASS_NAME_SHOW}`)\n\n      this._element.style[dimension] = ''\n\n      this.setTransitioning(false)\n\n      $(this._element).trigger(EVENT_SHOWN)\n    }\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1)\n    const scrollSize = `scroll${capitalizedDimension}`\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n\n    this._element.style[dimension] = `${this._element[scrollSize]}px`\n  }\n\n  hide() {\n    if (this._isTransitioning ||\n      !$(this._element).hasClass(CLASS_NAME_SHOW)) {\n      return\n    }\n\n    const startEvent = $.Event(EVENT_HIDE)\n    $(this._element).trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) {\n      return\n    }\n\n    const dimension = this._getDimension()\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`\n\n    Util.reflow(this._element)\n\n    $(this._element)\n      .addClass(CLASS_NAME_COLLAPSING)\n      .removeClass(`${CLASS_NAME_COLLAPSE} ${CLASS_NAME_SHOW}`)\n\n    const triggerArrayLength = this._triggerArray.length\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i]\n        const selector = Util.getSelectorFromElement(trigger)\n\n        if (selector !== null) {\n          const $elem = $([].slice.call(document.querySelectorAll(selector)))\n          if (!$elem.hasClass(CLASS_NAME_SHOW)) {\n            $(trigger).addClass(CLASS_NAME_COLLAPSED)\n              .attr('aria-expanded', false)\n          }\n        }\n      }\n    }\n\n    this.setTransitioning(true)\n\n    const complete = () => {\n      this.setTransitioning(false)\n      $(this._element)\n        .removeClass(CLASS_NAME_COLLAPSING)\n        .addClass(CLASS_NAME_COLLAPSE)\n        .trigger(EVENT_HIDDEN)\n    }\n\n    this._element.style[dimension] = ''\n    const transitionDuration = Util.getTransitionDurationFromElement(this._element)\n\n    $(this._element)\n      .one(Util.TRANSITION_END, complete)\n      .emulateTransitionEnd(transitionDuration)\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning\n  }\n\n  dispose() {\n    $.removeData(this._element, DATA_KEY)\n\n    this._config          = null\n    this._parent          = null\n    this._element         = null\n    this._triggerArray    = null\n    this._isTransitioning = null\n  }\n\n  // Private\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...config\n    }\n    config.toggle = Boolean(config.toggle) // Coerce string values\n    Util.typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _getDimension() {\n    const hasWidth = $(this._element).hasClass(DIMENSION_WIDTH)\n    return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT\n  }\n\n  _getParent() {\n    let parent\n\n    if (Util.isElement(this._config.parent)) {\n      parent = this._config.parent\n\n      // It's a jQuery object\n      if (typeof this._config.parent.jquery !== 'undefined') {\n        parent = this._config.parent[0]\n      }\n    } else {\n      parent = document.querySelector(this._config.parent)\n    }\n\n    const selector = `[data-toggle=\"collapse\"][data-parent=\"${this._config.parent}\"]`\n    const children = [].slice.call(parent.querySelectorAll(selector))\n\n    $(children).each((i, element) => {\n      this._addAriaAndCollapsedClass(\n        Collapse._getTargetFromElement(element),\n        [element]\n      )\n    })\n\n    return parent\n  }\n\n  _addAriaAndCollapsedClass(element, triggerArray) {\n    const isOpen = $(element).hasClass(CLASS_NAME_SHOW)\n\n    if (triggerArray.length) {\n      $(triggerArray)\n        .toggleClass(CLASS_NAME_COLLAPSED, !isOpen)\n        .attr('aria-expanded', isOpen)\n    }\n  }\n\n  // Static\n\n  static _getTargetFromElement(element) {\n    const selector = Util.getSelectorFromElement(element)\n    return selector ? document.querySelector(selector) : null\n  }\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      const $this   = $(this)\n      let data      = $this.data(DATA_KEY)\n      const _config = {\n        ...Default,\n        ...$this.data(),\n        ...typeof config === 'object' && config ? config : {}\n      }\n\n      if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n        _config.toggle = false\n      }\n\n      if (!data) {\n        data = new Collapse(this, _config)\n        $this.data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n$(document).on(EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.currentTarget.tagName === 'A') {\n    event.preventDefault()\n  }\n\n  const $trigger = $(this)\n  const selector = Util.getSelectorFromElement(this)\n  const selectors = [].slice.call(document.querySelectorAll(selector))\n\n  $(selectors).each(function () {\n    const $target = $(this)\n    const data    = $target.data(DATA_KEY)\n    const config  = data ? 'toggle' : $trigger.data()\n    Collapse._jQueryInterface.call($target, config)\n  })\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Collapse._jQueryInterface\n$.fn[NAME].Constructor = Collapse\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Collapse._jQueryInterface\n}\n\nexport default Collapse\n"]},"metadata":{},"sourceType":"script"}